pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        nodejs  "NODEJS"
    }
    
    parameters {
        string(name: 'NEXUS_HOST', defaultValue: 'http://54.247.201.131', description: 'Nexus URL HOST')
        string(name: 'NEXUS_REPO_NAME', defaultValue: 'npmrepo', description: 'Nexus repo where artifacts are to be stored')
    }

    stages {
        stage('Build') {
            steps {
                //crealing workspace
                cleanWs()
                
                // Get some code from a GitHub repository
                git branch: 'main', url: 'https://github.com/pratyu-J/jenkins_demo_node.git'

                // Run Maven on a Unix agent.

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }     
        }
        stage('Configure NPM Auth') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus', passwordVariable: 'nexuspass', usernameVariable: 'nexususer')]) {
                    script {
                        
                        def nexusRegistry = "${params.NEXUS_HOST}:8081/repository/${params.NEXUS_REPO_NAME}/"
                        def registryHost = nexusRegistry.replace('http://', '')
                        def authToken = sh(script: 'echo -n "${nexususer}:${nexuspass}" | base64', returnStdout: true).trim()
                        
                        sh "echo ${nexusRegistry}"
                        sh "echo ${params.NEXUS_HOST}"
                        sh "echo ${params.NEXUS_REPO_NAME}"

                        sh """
                          echo "registry=${nexusRegistry}" > .npmrc
                          echo "always-auth=true" >> .npmrc
                          echo "//${registryHost}:_auth=${authToken}" >> .npmrc
                        """
                        sh 'cat .npmrc'
                    }
                }
            }
        }

        stage("install Dependencies"){
            steps{
                sh "npm install"
            }
        }
        stage("build project"){
            steps{
                sh "npm version patch"
                sh "npm run build"
            }
        }
        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'dist/**'
            }
        }
        stage('publish'){
            steps{
                sh 'npm publish'
                sh 'rm .npmrc'
            }
        }
        
    }
}